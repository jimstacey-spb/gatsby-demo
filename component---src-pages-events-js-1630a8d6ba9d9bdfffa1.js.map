{"version":3,"file":"component---src-pages-events-js-1630a8d6ba9d9bdfffa1.js","mappings":"uKAwCA,UA/BmB,WACf,MAAwBA,EAAAA,SAAe,IAAhCC,EAAP,KAAaC,EAAb,MAEAC,EAAAA,EAAAA,YAAU,WACDF,EAAKG,QACNC,MAAM,yDACDC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAM,OAAIP,EAAQO,EAAOC,eAI3C,IAAMC,EAAYV,EAAKW,KAAI,SAACC,GAAD,OAAU,uBAAKC,IAAKD,EAAME,IAAI,GAAGC,IAAKH,OAEjE,OAAQ,gBAAC,IAAD,MACC,SAAAI,GAAC,OACE,gBAAC,IAAD,KACI,uBAAKC,UAAU,sBACX,0BACKD,EAAE,6BAGX,uBAAKC,UAAU,WACX,uBAAKA,UAAU,uBACVP","sources":["webpack://my-gatsby-site/./src/pages/events.js"],"sourcesContent":["import * as React from \"react\"\r\nimport Layout from \"../components/Layout\";\r\nimport \"../css/events-page.scss\";\r\nimport {useEffect} from \"react\";\r\nimport {Trans as T, useI18next, useTranslation} from 'gatsby-plugin-react-i18next';\r\nimport {graphql} from \"gatsby\";\r\nimport * as PropTypes from \"prop-types\";\r\nimport {Translation} from 'react-i18next';\r\n\r\nconst EventsPage = () => {\r\n    const [dogs, setDogs] = React.useState([]);\r\n\r\n    useEffect(() => {\r\n        if (!dogs.length) {\r\n            fetch('https://dog.ceo/api/breed/pomeranian/images/random/20')\r\n                .then(res => res.json())\r\n                .then(result => setDogs(result.message));\r\n        }\r\n    })\r\n\r\n    const dogPhotos = dogs.map((item) => <img src={item} alt=\"\" key={item}/>)\r\n\r\n    return (<Translation>\r\n            {t => (\r\n                <Layout>\r\n                    <div className=\"events-page__intro\">\r\n                        <h4>\r\n                            {t('events_page.dogs_dialog')}\r\n                        </h4>\r\n                    </div>\r\n                    <div className=\"wrapper\">\r\n                        <div className=\"events-page__photos\">\r\n                            {dogPhotos}\r\n                        </div>\r\n                    </div>\r\n                </Layout>)}\r\n        </Translation>\r\n    )\r\n};\r\n\r\nexport default EventsPage;\r\n\r\nexport const query = graphql`\r\n   query($language: String!) {\r\n    locales: allLocale(filter: {language: {eq: $language}, ns: {in: [\"events-page\", \"common\"]}}) {\r\n      edges {\r\n        node {\r\n          ns\r\n          data\r\n          language\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;"],"names":["React","dogs","setDogs","useEffect","length","fetch","then","res","json","result","message","dogPhotos","map","item","src","alt","key","t","className"],"sourceRoot":""}